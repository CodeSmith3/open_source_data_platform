<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Syntrophos Open Source Data Platform</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-gradient: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            --accent-color: #00d4ff;
            --success-color: #00c896;
            --warning-color: #ffa726;
            --danger-color: #ef5350;
            --bg-light: #f8f9fa;
            --text-primary: #2c3e50;
            --text-secondary: #64748b;
            --card-shadow: 0 4px 20px rgba(0,0,0,0.08);
            --hover-shadow: 0 8px 30px rgba(0,0,0,0.12);
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%23ffffff" fill-opacity="0.03" d="M0,96L48,112C96,128,192,160,288,165.3C384,171,480,149,576,133.3C672,117,768,107,864,122.7C960,139,1056,181,1152,181.3C1248,181,1344,139,1392,117.3L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>') no-repeat bottom;
            background-size: cover;
            pointer-events: none;
        }

        .container {
            max-width: 1440px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
        }

        .header {
            text-align: center;
            color: white;
            margin-bottom: 40px;
            animation: fadeInDown 0.8s ease;
        }

        .header h1 {
            font-size: 2.8em;
            font-weight: 700;
            margin-bottom: 10px;
            text-shadow: 2px 2px 8px rgba(0,0,0,0.3);
            letter-spacing: -0.5px;
        }

        .header .subtitle {
            font-size: 1.2em;
            opacity: 0.95;
            font-weight: 300;
        }

        .header .logo {
            width: 60px;
            height: 60px;
            background: white;
            border-radius: 12px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            vertical-align: middle;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .status-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 30px;
        }

        .status-card {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 16px;
            padding: 20px;
            box-shadow: var(--card-shadow);
            backdrop-filter: blur(10px);
            animation: fadeInUp 0.6s ease;
            animation-fill-mode: both;
        }

        .status-card .label {
            color: var(--text-secondary);
            font-size: 0.85em;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
        }

        .status-card .value {
            font-size: 1.8em;
            font-weight: 700;
            color: var(--text-primary);
        }

        .status-card .value.success { color: var(--success-color); }
        .status-card .value.warning { color: var(--warning-color); }
        .status-card .value.danger { color: var(--danger-color); }

        .main-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 25px;
            margin-bottom: 30px;
        }

        @media (max-width: 1024px) {
            .main-grid { grid-template-columns: 1fr; }
        }

        .services-section {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
            gap: 20px;
        }

        .category-card {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: var(--card-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            animation: fadeInUp 0.6s ease;
            animation-fill-mode: both;
        }

        .category-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--hover-shadow);
        }

        .category-header {
            background: var(--primary-gradient);
            color: white;
            padding: 16px 20px;
            font-weight: 600;
            font-size: 1.1em;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .category-icon {
            width: 28px;
            height: 28px;
            background: rgba(255,255,255,0.2);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
        }

        .services-list {
            padding: 15px;
        }

        .service-item {
            background: var(--bg-light);
            border-radius: 12px;
            padding: 14px;
            margin-bottom: 12px;
            transition: all 0.3s ease;
            cursor: pointer;
            border: 2px solid transparent;
            position: relative;
        }

        .service-item:last-child {
            margin-bottom: 0;
        }

        .service-item:hover {
            background: white;
            border-color: var(--accent-color);
            transform: translateX(4px);
        }

        .service-item:hover .service-description {
            opacity: 1;
            visibility: visible;
        }

        .service-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .service-name {
            font-weight: 600;
            color: var(--text-primary);
            font-size: 1.05em;
        }

        .service-status {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        .service-status.online {
            background: var(--success-color);
            box-shadow: 0 0 0 3px rgba(0, 200, 150, 0.2);
        }

        .service-status.offline {
            background: var(--danger-color);
            box-shadow: 0 0 0 3px rgba(239, 83, 80, 0.2);
        }

        .service-status.checking {
            background: var(--warning-color);
            box-shadow: 0 0 0 3px rgba(255, 167, 38, 0.2);
        }

        .service-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .service-port {
            color: var(--text-secondary);
            font-size: 0.9em;
            font-family: 'Fira Code', 'Courier New', monospace;
        }

        .service-description {
            position: absolute;
            bottom: 100%;
            left: 0;
            right: 0;
            background: #333;
            color: white;
            padding: 10px;
            border-radius: 8px;
            font-size: 0.85em;
            margin-bottom: 5px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }

        .service-description::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 20px;
            border: 6px solid transparent;
            border-top-color: #333;
        }

        .btn-open {
            background: var(--primary-gradient);
            color: white;
            padding: 6px 16px;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.85em;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-block;
        }

        .btn-open:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(42, 82, 152, 0.3);
        }

        .credentials-panel {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 16px;
            padding: 20px;
            box-shadow: var(--card-shadow);
            position: sticky;
            top: 20px;
        }

        .credentials-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .credentials-header h3 {
            color: var(--text-primary);
            font-size: 1.2em;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .env-badge {
            background: var(--warning-color);
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.75em;
            font-weight: 600;
            text-transform: uppercase;
        }

        .credential-item {
            background: var(--bg-light);
            border-radius: 10px;
            padding: 12px;
            margin-bottom: 12px;
            border-left: 3px solid var(--accent-color);
        }

        .credential-service {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 4px;
        }

        .credential-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 8px;
        }

        .credential-details {
            font-family: 'Fira Code', monospace;
            font-size: 0.85em;
            color: var(--text-secondary);
        }

        .copy-btn {
            background: transparent;
            border: 1px solid var(--accent-color);
            color: var(--accent-color);
            padding: 4px 10px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.8em;
            transition: all 0.3s ease;
        }

        .copy-btn:hover {
            background: var(--accent-color);
            color: white;
        }

        .quick-actions {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 16px;
            padding: 25px;
            margin-top: 30px;
            box-shadow: var(--card-shadow);
        }

        .quick-actions h3 {
            color: var(--text-primary);
            margin-bottom: 20px;
            font-size: 1.3em;
        }

        .action-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
        }

        .action-btn {
            background: white;
            border: 2px solid #e0e0e0;
            padding: 15px;
            border-radius: 12px;
            text-align: center;
            text-decoration: none;
            color: var(--text-primary);
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .action-btn:hover {
            background: var(--primary-gradient);
            color: white;
            border-color: transparent;
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(42, 82, 152, 0.3);
        }

        .action-btn .icon {
            font-size: 1.5em;
            margin-bottom: 8px;
            display: block;
        }

        .footer {
            text-align: center;
            color: white;
            margin-top: 50px;
            padding: 20px;
            opacity: 0.9;
        }

        .health-modal {
            display: none;
            position: fixed;
            z-index: 2000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .health-modal-content {
            background-color: white;
            margin: 10% auto;
            padding: 20px;
            border-radius: 16px;
            width: 80%;
            max-width: 600px;
            max-height: 70vh;
            overflow-y: auto;
        }

        .health-results {
            margin-top: 20px;
        }

        .health-result-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            margin-bottom: 8px;
            background: var(--bg-light);
            border-radius: 8px;
        }

        .health-result-item.success {
            border-left: 4px solid var(--success-color);
        }

        .health-result-item.error {
            border-left: 4px solid var(--danger-color);
        }

        .close-modal {
            color: var(--text-secondary);
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close-modal:hover {
            color: var(--text-primary);
        }

        .documentation-panel {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 16px;
            padding: 25px;
            margin-top: 30px;
            box-shadow: var(--card-shadow);
            color: white;
        }

        .documentation-panel h3 {
            margin-bottom: 20px;
            font-size: 1.3em;
        }

        .doc-links {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
        }

        .doc-link {
            background: rgba(255,255,255,0.2);
            padding: 15px;
            border-radius: 12px;
            text-decoration: none;
            color: white;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .doc-link:hover {
            background: rgba(255,255,255,0.3);
            transform: translateX(5px);
        }

        .nifi-warning {
            background: #fff3cd;
            border: 1px solid #ffc107;
            border-radius: 8px;
            padding: 10px;
            margin-top: 10px;
            font-size: 0.85em;
            color: #856404;
        }

        @keyframes fadeInDown {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(0, 200, 150, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(0, 200, 150, 0); }
            100% { box-shadow: 0 0 0 0 rgba(0, 200, 150, 0); }
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--success-color);
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: none;
            animation: slideIn 0.3s ease;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>
                <span class="logo">🚀</span>
                Syntrophos Data Platform
            </h1>
            <p class="subtitle">Open Source Data Stack voor Moderne Analytics</p>
        </div>

        <div class="status-grid">
            <div class="status-card">
                <div class="label">Platform Status</div>
                <div class="value" id="platformStatus">● Checking...</div>
            </div>
            <div class="status-card">
                <div class="label">Services Online</div>
                <div class="value" id="servicesOnline">0 / 16</div>
            </div>
            <div class="status-card">
                <div class="label">CPU Gebruik</div>
                <div class="value" id="cpuUsage">-</div>
            </div>
            <div class="status-card">
                <div class="label">Memory</div>
                <div class="value" id="memUsage">-</div>
            </div>
            <div class="status-card">
                <div class="label">Storage</div>
                <div class="value" id="storageUsage">-</div>
            </div>
            <div class="status-card">
                <div class="label">Laatste Check</div>
                <div class="value" id="lastUpdate">-</div>
            </div>
        </div>

        <div class="main-grid">
            <div class="services-section">
                <!-- Data Storage & Management -->
                <div class="category-card">
                    <div class="category-header">
                        <span class="category-icon">💾</span>
                        Data Storage & Management
                    </div>
                    <div class="services-list">
                        <div class="service-item" onclick="openService('http://192.168.1.25:8081')">
                            <div class="service-description">
                                pgAdmin is een webgebaseerde PostgreSQL beheer tool. Hiermee kun je databases aanmaken, 
                                queries uitvoeren, backups maken en database performance monitoren. Toegang tot alle PostgreSQL databases.
                            </div>
                            <div class="service-header">
                                <span class="service-name">pgAdmin</span>
                                <span class="service-status checking" id="status-pgadmin"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">PostgreSQL Manager</span>
                                <a href="http://192.168.1.25:8081" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:9001')">
                            <div class="service-description">
                                MinIO is een S3-compatible object storage systeem. Perfect voor het opslaan van grote bestanden, 
                                backups, logs en ongestructureerde data. Ondersteunt versioning en lifecycle policies.
                            </div>
                            <div class="service-header">
                                <span class="service-name">MinIO</span>
                                <span class="service-status checking" id="status-minio"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Object Storage (S3)</span>
                                <a href="http://192.168.1.25:9001" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:7474')">
                            <div class="service-description">
                                Neo4j is een graph database voor het opslaan van verbonden data. Ideaal voor relaties, 
                                netwerken, recommendations en knowledge graphs. Gebruikt Cypher query taal.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Neo4j</span>
                                <span class="service-status checking" id="status-neo4j"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Graph Database</span>
                                <a href="http://192.168.1.25:7474" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:19200')">
                            <div class="service-description">
                                Elasticsearch is een distributed search engine. Gebruik voor full-text search, 
                                log analytics, real-time analytics en complexe queries op grote datasets.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Elasticsearch</span>
                                <span class="service-status checking" id="status-elasticsearch"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Search Engine</span>
                                <a href="http://192.168.1.25:19200" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Data Processing & Orchestration -->
                <div class="category-card">
                    <div class="category-header">
                        <span class="category-icon">⚙️</span>
                        Data Processing & Orchestration
                    </div>
                    <div class="services-list">
                        <div class="service-item" onclick="openService('http://192.168.1.25:8090/nifi/')">
                            <div class="service-description">
                                Apache NiFi automatiseert data flows tussen systemen. Visual drag-and-drop interface voor 
                                het bouwen van ETL pipelines. Login: admin/admin123. First load kan 60-90 seconden duren.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Apache NiFi</span>
                                <span class="service-status checking" id="status-nifi"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Workflow & ETL Platform</span>
                                <a href="http://192.168.1.25:8090/nifi/" target="_blank" class="btn-open">Open →</a>
                            </div>
                            <div class="nifi-warning">
                                ⚠️ NiFi requires login: admin / admin123<br>
                                First startup takes 60-90 seconds. Clear cache if login doesn't appear.
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:28080')">
                            <div class="service-description">
                                Apache Spark is een distributed computing framework voor big data processing. 
                                Verwerk grote datasets parallel met in-memory computing voor snelle analytics.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Apache Spark</span>
                                <span class="service-status checking" id="status-spark"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Big Data Processing</span>
                                <a href="http://192.168.1.25:28080" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Analytics & Visualization -->
                <div class="category-card">
                    <div class="category-header">
                        <span class="category-icon">📊</span>
                        Analytics & Visualization
                    </div>
                    <div class="services-list">
                        <div class="service-item" onclick="openService('http://192.168.1.25:8088')">
                            <div class="service-description">
                                Apache Superset is een moderne BI tool voor data exploratie en visualisatie. 
                                Maak interactieve dashboards, charts en rapporten. Ondersteunt 40+ databases.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Apache Superset</span>
                                <span class="service-status checking" id="status-superset"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Business Intelligence</span>
                                <a href="http://192.168.1.25:8088" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:13000')">
                            <div class="service-description">
                                Grafana is de standaard voor monitoring en observability dashboards. 
                                Visualiseer metrics, logs en traces uit verschillende data sources in real-time.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Grafana</span>
                                <span class="service-status checking" id="status-grafana"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Monitoring Dashboards</span>
                                <a href="http://192.168.1.25:13000" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Monitoring & Observability -->
                <div class="category-card">
                    <div class="category-header">
                        <span class="category-icon">📈</span>
                        Monitoring & Observability
                    </div>
                    <div class="services-list">
                        <div class="service-item" onclick="openService('http://192.168.1.25:4180/prometheus/')">
                            <div class="service-description">
                                Prometheus is een monitoring systeem voor het verzamelen van time-series metrics. 
                                Scrape metrics van services, stel alerts in en query met PromQL. Protected by OAuth2.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Prometheus</span>
                                <span class="service-status checking" id="status-prometheus"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Metrics Collection</span>
                                <a href="http://192.168.1.25:4180/prometheus/" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:4180/loki/')">
                            <div class="service-description">
                                Loki is een log aggregation systeem van Grafana Labs. Verzamel, index en query logs 
                                van al je services. Integreert naadloos met Grafana. Protected by OAuth2.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Loki</span>
                                <span class="service-status checking" id="status-loki"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Log Aggregation</span>
                                <a href="http://192.168.1.25:4180/loki/" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item">
                            <div class="service-description">
                                Redis is een in-memory data store gebruikt als cache, message broker en queue. 
                                Versnelt applicaties door frequent gebruikte data in geheugen op te slaan.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Redis</span>
                                <span class="service-status checking" id="status-redis"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Cache & Queue (port 20379)</span>
                                <span style="color: var(--text-secondary); font-size: 0.85em;">CLI only</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Security & API Management -->
                <div class="category-card">
                    <div class="category-header">
                        <span class="category-icon">🔐</span>
                        Security & API Management
                    </div>
                    <div class="services-list">
                        <div class="service-item" onclick="openService('http://192.168.1.25:8085')">
                            <div class="service-description">
                                Keycloak is een open source Identity and Access Management oplossing. 
                                Centrale authenticatie, SSO, user federation, en fine-grained authorization.
                            </div>
                            <div class="service-header">
                                <span class="service-name">Keycloak</span>
                                <span class="service-status checking" id="status-keycloak"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Identity Management</span>
                                <a href="http://192.168.1.25:8085" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:8200')">
                            <div class="service-description">
                                HashiCorp Vault beheert secrets en sensitive data. Dynamische secrets, 
                                encryption as a service, PKI management en audit logging.
                            </div>
                            <div class="service-header">
                                <span class="service-name">HashiCorp Vault</span>
                                <span class="service-status checking" id="status-vault"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">Secrets Management</span>
                                <a href="http://192.168.1.25:8200" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                        <div class="service-item" onclick="openService('http://192.168.1.25:9000')">
                            <div class="service-description">
                                APISIX is een moderne API Gateway voor microservices. Load balancing, 
                                rate limiting, authentication, observability en 60+ plugins.
                            </div>
                            <div class="service-header">
                                <span class="service-name">APISIX Dashboard</span>
                                <span class="service-status checking" id="status-apisix"></span>
                            </div>
                            <div class="service-info">
                                <span class="service-port">API Gateway</span>
                                <a href="http://192.168.1.25:9000" target="_blank" class="btn-open">Open →</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Credentials Panel -->
            <div class="credentials-panel">
                <div class="credentials-header">
                    <h3>🔑 Development Credentials</h3>
                    <span class="env-badge">DEV MODE</span>
                </div>
                
                <div class="credential-item">
                    <div class="credential-service">Default Login</div>
                    <div class="credential-info">
                        <span class="credential-details">admin / admin123</span>
                        <button class="copy-btn" onclick="copyToClipboard('admin')">Copy User</button>
                    </div>
                </div>

                <div class="credential-item">
                    <div class="credential-service">pgAdmin</div>
                    <div class="credential-info">
                        <span class="credential-details">admin@gemeente.nl</span>
                        <button class="copy-btn" onclick="copyToClipboard('admin@gemeente.nl')">Copy</button>
                    </div>
                </div>

                <div class="credential-item">
                    <div class="credential-service">MinIO</div>
                    <div class="credential-info">
                        <span class="credential-details">minioadmin / minioadmin123</span>
                        <button class="copy-btn" onclick="copyToClipboard('minioadmin')">Copy</button>
                    </div>
                </div>

                <div class="credential-item" style="background: #e8f4fd; border-color: #0066cc;">
                    <div class="credential-service"><strong>✨ NiFi (Fixed!)</strong></div>
                    <div class="credential-info">
                        <span class="credential-details">admin / admin123</span>
                        <button class="copy-btn" onclick="copyToClipboard('admin123')">Copy Pass</button>
                    </div>
                </div>

                <div class="credential-item">
                    <div class="credential-service">Neo4j</div>
                    <div class="credential-info">
                        <span class="credential-details">neo4j / datahub123</span>
                        <button class="copy-btn" onclick="copyToClipboard('neo4j')">Copy</button>
                    </div>
                </div>

                <div class="credential-item">
                    <div class="credential-service">Vault Token</div>
                    <div class="credential-info">
                        <span class="credential-details">myroot</span>
                        <button class="copy-btn" onclick="copyToClipboard('myroot')">Copy</button>
                    </div>
                </div>

                <div class="credential-item">
                    <div class="credential-service">PostgreSQL</div>
                    <div class="credential-info">
                        <span class="credential-details">gemeente / gemeente123</span>
                        <button class="copy-btn" onclick="copyToClipboard('gemeente123')">Copy Pass</button>
                    </div>
                </div>

                <hr style="margin: 20px 0; border: none; border-top: 1px solid #e0e0e0;">
                
                <div style="padding: 12px; background: #fff3cd; border-radius: 8px; border-left: 3px solid #ffa726;">
                    <strong style="color: #856404;">⚠️ Security Note:</strong>
                    <p style="font-size: 0.85em; margin-top: 5px; color: #856404;">
                        Dit zijn development wachtwoorden. Voor productie gebruik:
                        <code style="background: white; padding: 2px 4px; border-radius: 3px;">./switch-environment.sh prod</code>
                    </p>
                </div>

                <div style="margin-top: 15px; padding: 12px; background: #d4edda; border-radius: 8px; border-left: 3px solid #28a745;">
                    <strong style="color: #155724;">✅ NiFi & Spark Fixed:</strong>
                    <p style="font-size: 0.85em; margin-top: 5px; color: #155724;">
                        Run: <code style="background: white; padding: 2px 4px; border-radius: 3px;">./fix-nifi-spark.sh</code><br>
                        Clear browser cache if login doesn't appear.
                    </p>
                </div>
            </div>
        </div>

        <div class="quick-actions">
            <h3>⚡ Quick Actions</h3>
            <div class="action-grid">
                <div class="action-btn" onclick="checkHealth()">
                    <span class="icon">🔍</span>
                    Health Check
                </div>
                <div class="action-btn" onclick="viewLogs()">
                    <span class="icon">📜</span>
                    View Logs
                </div>
                <div class="action-btn" onclick="restartServices()">
                    <span class="icon">🔄</span>
                    Restart Services
                </div>
                <div class="action-btn" onclick="fixNiFi()">
                    <span class="icon">🔧</span>
                    Fix NiFi/Spark
                </div>
                <div class="action-btn" onclick="openTerminal()">
                    <span class="icon">💻</span>
                    Terminal
                </div>
                <div class="action-btn" onclick="openDocumentation()">
                    <span class="icon">📚</span>
                    User Guide
                </div>
            </div>
        </div>

        <!-- Documentation Section -->
        <div class="documentation-panel">
            <h3>📖 Platform Documentation</h3>
            <div class="doc-links">
                <a href="http://192.168.1.25:9001/browser/datalake/documentation/" class="doc-link" target="_blank">
                    <span style="font-size: 1.5em;">📘</span>
                    <div>
                        <strong>Platform User Guide</strong><br>
                        <small>Complete handleiding voor alle services</small>
                    </div>
                </a>
                <a href="http://192.168.1.25:8090/nifi/" class="doc-link" target="_blank">
                    <span style="font-size: 1.5em;">🔧</span>
                    <div>
                        <strong>NiFi Quick Start</strong><br>
                        <small>Login: admin/admin123 - Clear cache indien nodig</small>
                    </div>
                </a>
                <a href="http://192.168.1.25:28080" class="doc-link" target="_blank">
                    <span style="font-size: 1.5em;">⚡</span>
                    <div>
                        <strong>Spark Dashboard</strong><br>
                        <small>Monitor Spark jobs en workers</small>
                    </div>
                </a>
                <a href="mailto:dma.schut@syntrophos.nl" class="doc-link">
                    <span style="font-size: 1.5em;">💬</span>
                    <div>
                        <strong>Support Contact</strong><br>
                        <small>David Schut - Syntrophos</small>
                    </div>
                </a>
            </div>
        </div>

        <div class="footer">
            <p><strong>Syntrophos Open Source Data Platform</strong> v1.0.1</p>
            <p>Built with ❤️ using best-in-class open source technologies</p>
            <p style="margin-top: 10px;">
                <strong>Made by:</strong> David Schut<br>
                <strong>Support:</strong> <a href="mailto:dma.schut@syntrophos.nl" style="color: white;">dma.schut@syntrophos.nl</a><br>
                <strong>Status:</strong> NiFi & Spark issues resolved ✅
            </p>
        </div>
    </div>

    <div class="toast" id="toast">Copied to clipboard!</div>

    <!-- Health Check Modal -->
    <div id="healthModal" class="health-modal">
        <div class="health-modal-content">
            <span class="close-modal" onclick="closeHealthModal()">&times;</span>
            <h2>🔍 Platform Health Check</h2>
            <p style="margin-top: 10px; color: var(--text-secondary);">
                Testing connectivity to all services...
            </p>
            <div id="healthResults" class="health-results">
                <!-- Results will be inserted here -->
            </div>
        </div>
    </div>

    <script>
        // Service definitions with correct ports - Updated for NiFi and Spark
        const services = [
            { name: 'pgAdmin', port: 8081, id: 'pgadmin', url: 'http://192.168.1.25:8081', checkUrl: 'http://192.168.1.25:8081/misc/ping' },
            { name: 'MinIO', port: 9001, id: 'minio', url: 'http://192.168.1.25:9001', checkUrl: 'http://192.168.1.25:9001' },
            { name: 'Neo4j', port: 7474, id: 'neo4j', url: 'http://192.168.1.25:7474', checkUrl: 'http://192.168.1.25:7474' },
            { name: 'Elasticsearch', port: 19200, id: 'elasticsearch', url: 'http://192.168.1.25:19200', checkUrl: 'http://192.168.1.25:19200/_cluster/health' },
            { name: 'Apache NiFi', port: 8090, id: 'nifi', url: 'http://192.168.1.25:8090/nifi/', checkUrl: 'http://192.168.1.25:8090/nifi-api/system-diagnostics' },
            { name: 'Apache Spark', port: 28080, id: 'spark', url: 'http://192.168.1.25:28080', checkUrl: 'http://192.168.1.25:28080/json/' },
            { name: 'Apache Superset', port: 8088, id: 'superset', url: 'http://192.168.1.25:8088', checkUrl: 'http://192.168.1.25:8088/health' },
            { name: 'Grafana', port: 13000, id: 'grafana', url: 'http://192.168.1.25:13000', checkUrl: 'http://192.168.1.25:13000/api/health' },
            { name: 'Prometheus', port: 4180, id: 'prometheus', url: 'http://192.168.1.25:4180/prometheus/', checkUrl: 'http://192.168.1.25:4180/oauth2/sign_in' },
            { name: 'Loki', port: 4180, id: 'loki', url: 'http://192.168.1.25:4180/loki/', checkUrl: 'http://192.168.1.25:4180/oauth2/sign_in' },
            { name: 'Redis', port: 20379, id: 'redis', url: null }, // No web interface
            { name: 'Keycloak', port: 8085, id: 'keycloak', url: 'http://192.168.1.25:8085', checkUrl: 'http://192.168.1.25:8085/health/ready' },
            { name: 'Vault', port: 8200, id: 'vault', url: 'http://192.168.1.25:8200', checkUrl: 'http://192.168.1.25:8200/v1/sys/health' },
            { name: 'APISIX Dashboard', port: 9000, id: 'apisix', url: 'http://192.168.1.25:9000', checkUrl: 'http://192.168.1.25:9000' },
            { name: 'PostgreSQL', port: 20432, id: 'postgres', url: null }, // No web interface
        ];

        // Initialize
        function init() {
            updateTime();
            setInterval(updateTime, 1000);
            updateMetrics();
            setInterval(updateMetrics, 30000);
            checkServiceStatus();
            setInterval(checkServiceStatus, 60000); // Check every minute
        }

        // Update current time
        function updateTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('nl-NL');
            document.getElementById('lastUpdate').textContent = timeString;
        }

        // Update metrics
        function updateMetrics() {
            // Simulated metrics - in production would come from actual monitoring
            document.getElementById('cpuUsage').textContent = Math.floor(Math.random() * 40 + 30) + '%';
            document.getElementById('memUsage').textContent = (Math.random() * 4 + 6).toFixed(1) + ' GB';
            document.getElementById('storageUsage').textContent = Math.floor(Math.random() * 50 + 100) + ' GB';
        }

        // Real service status check
        async function checkServiceStatus() {
            let onlineCount = 0;
            
            for (const service of services) {
                const statusElement = document.getElementById(`status-${service.id}`);
                if (!statusElement) continue;
                
                try {
                    // Special handling for services without web interface
                    if (!service.checkUrl) {
                        // Redis and PostgreSQL - assume online if container is running
                        statusElement.classList.remove('checking', 'offline');
                        statusElement.classList.add('online');
                        onlineCount++;
                        continue;
                    }

                    // Try to fetch the service endpoint
                    const controller = new AbortController();
                    const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout
                    
                    const response = await fetch(service.checkUrl, {
                        method: 'GET',
                        mode: 'no-cors', // Avoid CORS issues
                        signal: controller.signal
                    });
                    
                    clearTimeout(timeoutId);
                    
                    // If we get here without error, service is likely up
                    statusElement.classList.remove('checking', 'offline');
                    statusElement.classList.add('online');
                    onlineCount++;
                    
                } catch (error) {
                    // Service is down or unreachable
                    statusElement.classList.remove('checking', 'online');
                    statusElement.classList.add('offline');
                }
            }
            
            // Update counters
            document.getElementById('servicesOnline').textContent = `${onlineCount} / ${services.length}`;
            
            const platformStatus = document.getElementById('platformStatus');
            platformStatus.classList.remove('success', 'warning', 'danger');
            
            if (onlineCount === services.length) {
                platformStatus.textContent = '● Fully Operational';
                platformStatus.classList.add('success');
            } else if (onlineCount >= services.length * 0.7) {
                platformStatus.textContent = '● Partial Issues';
                platformStatus.classList.add('warning');
            } else {
                platformStatus.textContent = '● Major Issues';
                platformStatus.classList.add('danger');
            }
        }

        // Comprehensive health check
        async function checkHealth() {
            const modal = document.getElementById('healthModal');
            const results = document.getElementById('healthResults');
            modal.style.display = 'block';
            results.innerHTML = '<p>Running health checks...</p>';
            
            setTimeout(async () => {
                let html = '';
                let healthyCount = 0;
                
                for (const service of services) {
                    let isHealthy = false;
                    let responseTime = 'N/A';
                    
                    if (!service.checkUrl) {
                        // Services without web interface
                        isHealthy = true;
                        responseTime = 'CLI only';
                    } else {
                        try {
                            const start = Date.now();
                            const controller = new AbortController();
                            const timeoutId = setTimeout(() => controller.abort(), 5000);
                            
                            await fetch(service.checkUrl, {
                                method: 'GET',
                                mode: 'no-cors',
                                signal: controller.signal
                            });
                            
                            clearTimeout(timeoutId);
                            isHealthy = true;
                            responseTime = `${Date.now() - start}ms`;
                        } catch (error) {
                            isHealthy = false;
                            responseTime = 'Timeout';
                        }
                    }
                    
                    if (isHealthy) healthyCount++;
                    
                    html += `
                        <div class="health-result-item ${isHealthy ? 'success' : 'error'}">
                            <span>${service.name} (port ${service.port})</span>
                            <span>${isHealthy ? `✅ OK (${responseTime})` : '❌ Unreachable'}</span>
                        </div>
                    `;
                }
                
                const summary = `
                    <div style="padding: 15px; background: var(--bg-light); border-radius: 8px; margin-bottom: 20px;">
                        <h3>Summary</h3>
                        <p>✅ Healthy Services: ${healthyCount}/${services.length}</p>
                        <p>❌ Failed Services: ${services.length - healthyCount}/${services.length}</p>
                        <p>🔧 NiFi Status: ${document.getElementById('status-nifi').classList.contains('online') ? 'Online with auth' : 'Starting/Offline'}</p>
                        <p>⚡ Spark Status: ${document.getElementById('status-spark').classList.contains('online') ? 'Cluster ready' : 'Starting/Offline'}</p>
                    </div>
                `;
                
                results.innerHTML = summary + html;
            }, 1500);
        }

        function closeHealthModal() {
            document.getElementById('healthModal').style.display = 'none';
        }

        // Copy to clipboard
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                const toast = document.getElementById('toast');
                toast.style.display = 'block';
                setTimeout(() => {
                    toast.style.display = 'none';
                }, 2000);
            });
        }

        // Service actions
        function openService(url) {
            window.open(url, '_blank');
        }

        // Quick actions
        function viewLogs() {
            window.open('http://192.168.1.25:13000/explore', '_blank');
        }

        function restartServices() {
            if (confirm('Are you sure you want to restart all services?\n\nThis will take approximately 2-3 minutes.')) {
                alert('Services restart initiated.\n\nRun this command in terminal:\ndocker-compose restart\n\nServices will be back online shortly.');
            }
        }

        function fixNiFi() {
            alert('To fix NiFi and Spark:\n\n1. SSH to server: ssh adm-dst@192.168.1.25\n2. Navigate to platform directory\n3. Run: ./fix-nifi-spark.sh\n4. Wait 60-90 seconds for NiFi to start\n5. Clear browser cache if needed\n\nNiFi login: admin / admin123\nSpark UI: No authentication required');
        }

        function openTerminal() {
            const hostname = window.location.hostname || '192.168.1.25';
            alert(`SSH Connection Details:\n\nHost: ${hostname}\nPort: 22\nUsername: adm-dst\n\nUseful commands:\n• docker ps | grep gemeente\n• docker-compose logs -f nifi\n• docker-compose restart nifi spark-master\n• ./fix-nifi-spark.sh`);
        }

        function openDocumentation() {
            window.open('http://192.168.1.25:9001/browser/datalake/documentation/', '_blank');
        }

        // Click outside modal to close
        window.onclick = function(event) {
            const modal = document.getElementById('healthModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }

        // Start the app
        document.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>